#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BPLOG_PREFIX="buildpack.java"

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

source /tmp/buildpacks/functions/common.sh
source $BP_DIR/lib/common.sh
source $BP_DIR/lib/maven.sh
source $BP_DIR/lib/stdlib.sh
source $BP_DIR/lib/getrunner.sh
#source <(curl -s --retry 3 -L $BUILDPACK_STDLIB_URL)

export_env $ENV_DIR "." "JAVA_OPTS|JAVA_TOOL_OPTIONS"

install_jdk "${BUILD_DIR}" "${CACHE_DIR}"

[ -n "$(find ${BUILD_DIR} -type f -name "*.kt")" ] && mcount "kotlin.source"
[ -n "$(find ${BUILD_DIR} -type f -name "*.groovy")" ] && mcount "groovy.source"

if [[ -f bin/java-pre-compile ]]; then
    status "Running bin/java-pre-compile hook"
    chmod a+x bin/java-pre-compile
    bin/java-pre-compile
fi

run_mvn "compile" $BUILD_DIR $CACHE_DIR

if [[ -f bin/java-post-compile ]]; then
    status "Running bin/java-post-compile hook"
    chmod a+x bin/java-post-compile
    bin/java-post-compile
fi

if [ -f "$BUILD_DIR/.iswar" ];then
    WEBSERVER=`cat $BUILD_DIR/webserver`
    WEBSERVER=${WEBSERVER:=webapp-runner-8.5.38.0.jar}
    WEBTYPE=`echo $WEBSERVER| awk -F '-' '{print $1}'`
    WEBTYPE=${WEBTYPE:=webapp}
    if [ "$WEBTYPE" == "webapp" ]; then
        dl_webapp_runner $WEBSERVER $OFFLINE
    else
        dl_jetty_runner $WEBSERVER $OFFLINE
    fi
fi

#if has_maven_wrapper $BUILD_DIR; then
#  cache_copy ".m2/wrapper" $BUILD_DIR $CACHE_DIR
#  rm -rf $BUILD_DIR/.m2
#fi